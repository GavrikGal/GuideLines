name: Init

on:
  workflow_call:
    inputs:
      tests-path:
        required: true
        type: string

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - name: Check out this repo
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.cache/firefox
          key: ${{ runner.os }}-firefox-${{ hashFiles('firefox') }}
          restore-keys: |
            ${{ runner.os }}-firefox-

      - name: Install Firefox
        run: sudo apt-get install -y firefox

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Update pip
        run: python -m pip install --upgrade pip
      - name: Install the necessary packages
        run: pip install requests webdriver-manager selenium

#      - name: Cache requirements
#        id: cache-requirements
#        uses: actions/cache@v3
#        with:
#          path: ~/.cache/pip
#          key: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}
#          restore-keys: ${{ hashFiles('setup.py') }}-${{ hashFiles('requirements.txt') }}


      - name: Install requirements
        run: pip install --upgrade --upgrade-strategy eager -r requirements.txt
#        if: steps.cache-requirements.outputs.cache-hit != 'true'




#      - name: Get pip cache dir
#        id: pip-cache
#        run: |
#          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
#
#      - name: pip cache
#        id: cache-requirements
#        uses: actions/cache@v3
#        with:
#          path: ${{ steps.pip-cache.outputs.dir }}
#          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
#          restore-keys: |
#            ${{ runner.os }}-pip-

      - name: Migrations
        run: |
          python manage.py makemigrations
          python manage.py migrate

      - name: Run functional tests
        run: echo "python manage.py test functional_tests.${{ inputs.tests-path }}"

      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.tests-path }}_logs
          path: logs
        if: ${{ failure() }}
